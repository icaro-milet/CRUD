# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
name: .NET

on:
  push:
    paths:
      - 'src/**'
    tags:
      - 'v*'
    branches: [ "main" ]
  pull_request:
    paths:
      - 'src/**'
    branches: [ "feature/**", fix/** ]

  workflow_dispatch:

env: 
  solutionFolder: ./CRUD.sln
  imageName: crudimage


defaults:
  run:
    working-directory: src

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
        
    - name: Install SonarCloud scanner
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet tool install --global dotnet-coverage
    - name: Install Report Generator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet-sonarscanner begin /k:"Milet_CRUD" /o:"milet" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml 
        dotnet restore $(solutionFolder)
        dotnet build $(solutionFolder) --configuration Release
        dotnet-coverage collect 'dotnet test --no-build' -f xml -o 'coverage.xml'        
        dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
